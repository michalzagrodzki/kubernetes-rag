apiVersion: v1
kind: PersistentVolumeClaim
metadata: { name: llm-models, namespace: rag-dev }
spec:
  accessModes: ["ReadWriteOnce"]
  resources: { requests: { storage: 4Gi } }

---
apiVersion: apps/v1
kind: Deployment
metadata: { name: llm, namespace: rag-dev }
spec:
  replicas: 1
  selector: { matchLabels: { app: llm } }
  template:
    metadata: { labels: { app: llm } }
    spec:
      securityContext: { runAsNonRoot: true }
      containers:
        - name: server
          image: rag-llm:dev
          imagePullPolicy: IfNotPresent
          ports: [{ containerPort: 8000, name: http }]
          env:
            - { name: HOST, value: "0.0.0.0" }
            - { name: PORT, value: "8000" }
            - { name: MODEL, value: "/models/qwen2.5-1.5b-instruct-q6_k.gguf" }
          volumeMounts:
            - { name: models, mountPath: /models }
          readinessProbe:
            httpGet: { path: /health, port: http }
            initialDelaySeconds: 10
            periodSeconds: 10
          livenessProbe:
            httpGet: { path: /health, port: http }
            initialDelaySeconds: 20
            periodSeconds: 10
          resources:
            requests: { cpu: "500m", memory: "1Gi" }
            limits:   { cpu: "10",   memory: "4Gi" }
      volumes:
        - name: models
          persistentVolumeClaim: { claimName: llm-models }

---
apiVersion: v1
kind: Service
metadata: { name: llm, namespace: rag-dev }
spec:
  selector: { app: llm }
  ports: [{ name: http, port: 8000, targetPort: 8000 }]
