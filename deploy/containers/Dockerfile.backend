######## Backend (FastAPI) ########
# Build stage: compile wheels for Python deps (psycopg2 needs libpq-dev)
FROM python:3.13.7-slim@sha256:e7115fc80dd5fa029eb3a11ff1deece625ebb66cc5937d492cf464a704bdacbe AS builder

ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1

WORKDIR /wheels

RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Use repo root as context; requirements live in backend/
COPY backend/requirements.txt /wheels/requirements.txt
RUN python -m pip install --upgrade pip wheel && \
    pip wheel --no-cache-dir --wheel-dir /wheels -r /wheels/requirements.txt

# Runtime stage
FROM python:3.13.7-slim@sha256:e7115fc80dd5fa029eb3a11ff1deece625ebb66cc5937d492cf464a704bdacbe

ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1 \
    PDF_DIR=/app/pdfs

WORKDIR /app

# Install deps from prebuilt wheels
COPY backend/requirements.txt /app/requirements.txt
COPY --from=builder /wheels /wheels
RUN python -m pip install --upgrade pip && \
    pip install --no-index --find-links=/wheels -r /app/requirements.txt && \
    rm -rf /wheels /root/.cache/pip

# Copy only backend application source
COPY backend/ /app/

# Create non-root user and ensure write access to PDF_DIR
RUN useradd --create-home --uid 10001 --shell /usr/sbin/nologin appuser && \
    mkdir -p ${PDF_DIR} && chown -R appuser:appuser /app
USER appuser

EXPOSE 8000

# app.py is at /app/app.py with FastAPI instance `app`
CMD ["uvicorn", "app:app", "--host", "0.0.0.0", "--port", "8000"]
